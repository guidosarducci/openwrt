From 82dff2b6d65aefc3f38be4e7963e2eb36d85fe4d Mon Sep 17 00:00:00 2001
From: guidosarducci <guidosarducci@users.noreply.github.com>
Date: Wed, 13 Nov 2019 00:00:22 -0800
Subject: [PATCH] FIXUP: simplify and rewrite

---
 arch/mips/net/ebpf_jit.c | 18 ++++++------------
 1 file changed, 6 insertions(+), 12 deletions(-)

diff --git a/arch/mips/net/ebpf_jit.c b/arch/mips/net/ebpf_jit.c
index 19161166770b..aa0ffc016698 100644
--- a/arch/mips/net/ebpf_jit.c
+++ b/arch/mips/net/ebpf_jit.c
@@ -667,18 +667,12 @@ static int build_one_insn(const struct bpf_insn *insn, struct jit_ctx *ctx,
 	s64 t64s;
 	int bpf_op = BPF_OP(insn->code);
 
-	/* No support in 32-bit JIT for 64-bit ALU and args */
-	if (IS_ENABLED(CONFIG_32BIT)) {
-		if (BPF_CLASS(insn->code) == BPF_ALU64)
-			return -EINVAL;
-		switch (BPF_CLASS(insn->code) | BPF_SIZE(insn->code)) {
-		case BPF_LD | BPF_DW:
-		case BPF_LDX | BPF_DW:
-		case BPF_ST | BPF_DW:
-		case BPF_STX | BPF_DW:
-			return -EINVAL;
-		}
-	}
+	/* No support in 32-bit JIT for 64-bit ALU or load/stores */
+	if (IS_ENABLED(CONFIG_32BIT) &&
+		((BPF_CLASS(insn->code) == BPF_ALU64) ||
+		((BPF_CLASS(insn->code) < BPF_ALU) &&  /* BPF_LD/LDX/ST/STX */
+			(BPF_SIZE(insn->code) == BPF_DW))))
+		return -EINVAL;
 
 	switch (insn->code) {
 	case BPF_ALU64 | BPF_ADD | BPF_K: /* ALU64_IMM */
-- 
2.17.1

